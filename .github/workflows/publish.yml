name: publish package
on:
  push:
    branches:
      - main
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'release(')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: setup git config
        run: git config user.name ${{ secrets.PUBLISH_USERNAME }} && git config user.email ${{ secrets.PUBLISH_EMAIL }}

      - name: Install np
        run: yarn global add @akhilome/np@latest

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build distributable
        run: yarn build

      - name: Detect release version
        run: |
          echo release_version="$(echo '${{ github.event.head_commit.message }}' | sed -nE 's/.*release\(([a-z]+)\).*/\1/p')" >> $GITHUB_ENV

      - name: Print detected version
        run: echo "${{ env.release_version }}"

      - name: Detect release tag
        run: |
          echo release_tag="$(echo '${{ github.event.head_commit.message }}' | sed -nE 's/.*tag\:([a-z]+).*/\1/p')" >> $GITHUB_ENV

      - name: Print detected tag
        run: echo "${{ env.release_tag }}"

      - name: Create & publish new release
        run: |
          if [ -n ${{ env.release_tag }} ]
          then
            np ${{ env.release_version }} --tag=${{ env.release_tag }} --message='chore: bump version to %s' --no-collab-check
          else
            np ${{ env.release_version }} --message='chore: bump version to v%s' --no-collab-check
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
